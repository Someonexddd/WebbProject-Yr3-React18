{"ast":null,"code":"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport { Log } from './Log.js';\nimport { OidcClientSettings } from './OidcClientSettings.js';\nimport { ErrorResponse } from './ErrorResponse.js';\nimport { SigninRequest } from './SigninRequest.js';\nimport { SigninResponse } from './SigninResponse.js';\nimport { SignoutRequest } from './SignoutRequest.js';\nimport { SignoutResponse } from './SignoutResponse.js';\nimport { SigninState } from './SigninState.js';\nimport { State } from './State.js';\nexport class OidcClient {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (settings instanceof OidcClientSettings) {\n      this._settings = settings;\n    } else {\n      this._settings = new OidcClientSettings(settings);\n    }\n  }\n\n  get _stateStore() {\n    return this.settings.stateStore;\n  }\n\n  get _validator() {\n    return this.settings.validator;\n  }\n\n  get _metadataService() {\n    return this.settings.metadataService;\n  }\n\n  get settings() {\n    return this._settings;\n  }\n\n  get metadataService() {\n    return this._metadataService;\n  }\n\n  createSigninRequest() {\n    let {\n      response_type,\n      scope,\n      redirect_uri,\n      // data was meant to be the place a caller could indicate the data to\n      // have round tripped, but people were getting confused, so i added state (since that matches the spec)\n      // and so now if data is not passed, but state is then state will be used\n      data,\n      state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      resource,\n      request,\n      request_uri,\n      response_mode,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      skipUserInfo\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let stateStore = arguments.length > 1 ? arguments[1] : undefined;\n    Log.debug(\"OidcClient.createSigninRequest\");\n    let client_id = this._settings.client_id;\n    response_type = response_type || this._settings.response_type;\n    scope = scope || this._settings.scope;\n    redirect_uri = redirect_uri || this._settings.redirect_uri; // id_token_hint, login_hint aren't allowed on _settings\n\n    prompt = prompt || this._settings.prompt;\n    display = display || this._settings.display;\n    max_age = max_age || this._settings.max_age;\n    ui_locales = ui_locales || this._settings.ui_locales;\n    acr_values = acr_values || this._settings.acr_values;\n    resource = resource || this._settings.resource;\n    response_mode = response_mode || this._settings.response_mode;\n    extraQueryParams = extraQueryParams || this._settings.extraQueryParams;\n    extraTokenParams = extraTokenParams || this._settings.extraTokenParams;\n    let authority = this._settings.authority;\n\n    if (SigninRequest.isCode(response_type) && response_type !== \"code\") {\n      return Promise.reject(new Error(\"OpenID Connect hybrid flow is not supported\"));\n    }\n\n    return this._metadataService.getAuthorizationEndpoint().then(url => {\n      Log.debug(\"OidcClient.createSigninRequest: Received authorization endpoint\", url);\n      let signinRequest = new SigninRequest({\n        url,\n        client_id,\n        redirect_uri,\n        response_type,\n        scope,\n        data: data || state,\n        authority,\n        prompt,\n        display,\n        max_age,\n        ui_locales,\n        id_token_hint,\n        login_hint,\n        acr_values,\n        resource,\n        request,\n        request_uri,\n        extraQueryParams,\n        extraTokenParams,\n        request_type,\n        response_mode,\n        client_secret: this._settings.client_secret,\n        skipUserInfo\n      });\n      var signinState = signinRequest.state;\n      stateStore = stateStore || this._stateStore;\n      return stateStore.set(signinState.id, signinState.toStorageString()).then(() => {\n        return signinRequest;\n      });\n    });\n  }\n\n  readSigninResponseState(url, stateStore) {\n    let removeState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    Log.debug(\"OidcClient.readSigninResponseState\");\n    let useQuery = this._settings.response_mode === \"query\" || !this._settings.response_mode && SigninRequest.isCode(this._settings.response_type);\n    let delimiter = useQuery ? \"?\" : \"#\";\n    var response = new SigninResponse(url, delimiter);\n\n    if (!response.state) {\n      Log.error(\"OidcClient.readSigninResponseState: No state in response\");\n      return Promise.reject(new Error(\"No state in response\"));\n    }\n\n    stateStore = stateStore || this._stateStore;\n    var stateApi = removeState ? stateStore.remove.bind(stateStore) : stateStore.get.bind(stateStore);\n    return stateApi(response.state).then(storedStateString => {\n      if (!storedStateString) {\n        Log.error(\"OidcClient.readSigninResponseState: No matching state found in storage\");\n        throw new Error(\"No matching state found in storage\");\n      }\n\n      let state = SigninState.fromStorageString(storedStateString);\n      return {\n        state,\n        response\n      };\n    });\n  }\n\n  processSigninResponse(url, stateStore) {\n    Log.debug(\"OidcClient.processSigninResponse\");\n    return this.readSigninResponseState(url, stateStore, true).then(_ref => {\n      let {\n        state,\n        response\n      } = _ref;\n      Log.debug(\"OidcClient.processSigninResponse: Received state from storage; validating response\");\n      return this._validator.validateSigninResponse(state, response);\n    });\n  }\n\n  createSignoutRequest() {\n    let {\n      id_token_hint,\n      data,\n      state,\n      post_logout_redirect_uri,\n      extraQueryParams,\n      request_type\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let stateStore = arguments.length > 1 ? arguments[1] : undefined;\n    Log.debug(\"OidcClient.createSignoutRequest\");\n    post_logout_redirect_uri = post_logout_redirect_uri || this._settings.post_logout_redirect_uri;\n    extraQueryParams = extraQueryParams || this._settings.extraQueryParams;\n    return this._metadataService.getEndSessionEndpoint().then(url => {\n      if (!url) {\n        Log.error(\"OidcClient.createSignoutRequest: No end session endpoint url returned\");\n        throw new Error(\"no end session endpoint\");\n      }\n\n      Log.debug(\"OidcClient.createSignoutRequest: Received end session endpoint\", url);\n      let request = new SignoutRequest({\n        url,\n        id_token_hint,\n        post_logout_redirect_uri,\n        data: data || state,\n        extraQueryParams,\n        request_type\n      });\n      var signoutState = request.state;\n\n      if (signoutState) {\n        Log.debug(\"OidcClient.createSignoutRequest: Signout request has state to persist\");\n        stateStore = stateStore || this._stateStore;\n        stateStore.set(signoutState.id, signoutState.toStorageString());\n      }\n\n      return request;\n    });\n  }\n\n  readSignoutResponseState(url, stateStore) {\n    let removeState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    Log.debug(\"OidcClient.readSignoutResponseState\");\n    var response = new SignoutResponse(url);\n\n    if (!response.state) {\n      Log.debug(\"OidcClient.readSignoutResponseState: No state in response\");\n\n      if (response.error) {\n        Log.warn(\"OidcClient.readSignoutResponseState: Response was error: \", response.error);\n        return Promise.reject(new ErrorResponse(response));\n      }\n\n      return Promise.resolve({\n        state: undefined,\n        response\n      });\n    }\n\n    var stateKey = response.state;\n    stateStore = stateStore || this._stateStore;\n    var stateApi = removeState ? stateStore.remove.bind(stateStore) : stateStore.get.bind(stateStore);\n    return stateApi(stateKey).then(storedStateString => {\n      if (!storedStateString) {\n        Log.error(\"OidcClient.readSignoutResponseState: No matching state found in storage\");\n        throw new Error(\"No matching state found in storage\");\n      }\n\n      let state = State.fromStorageString(storedStateString);\n      return {\n        state,\n        response\n      };\n    });\n  }\n\n  processSignoutResponse(url, stateStore) {\n    Log.debug(\"OidcClient.processSignoutResponse\");\n    return this.readSignoutResponseState(url, stateStore, true).then(_ref2 => {\n      let {\n        state,\n        response\n      } = _ref2;\n\n      if (state) {\n        Log.debug(\"OidcClient.processSignoutResponse: Received state from storage; validating response\");\n        return this._validator.validateSignoutResponse(state, response);\n      } else {\n        Log.debug(\"OidcClient.processSignoutResponse: No state from storage; skipping validating response\");\n        return response;\n      }\n    });\n  }\n\n  clearStaleState(stateStore) {\n    Log.debug(\"OidcClient.clearStaleState\");\n    stateStore = stateStore || this._stateStore;\n    return State.clearStaleState(stateStore, this.settings.staleStateAge);\n  }\n\n}","map":{"version":3,"names":["Log","OidcClientSettings","ErrorResponse","SigninRequest","SigninResponse","SignoutRequest","SignoutResponse","SigninState","State","OidcClient","constructor","settings","_settings","_stateStore","stateStore","_validator","validator","_metadataService","metadataService","createSigninRequest","response_type","scope","redirect_uri","data","state","prompt","display","max_age","ui_locales","id_token_hint","login_hint","acr_values","resource","request","request_uri","response_mode","extraQueryParams","extraTokenParams","request_type","skipUserInfo","debug","client_id","authority","isCode","Promise","reject","Error","getAuthorizationEndpoint","then","url","signinRequest","client_secret","signinState","set","id","toStorageString","readSigninResponseState","removeState","useQuery","delimiter","response","error","stateApi","remove","bind","get","storedStateString","fromStorageString","processSigninResponse","validateSigninResponse","createSignoutRequest","post_logout_redirect_uri","getEndSessionEndpoint","signoutState","readSignoutResponseState","warn","resolve","undefined","stateKey","processSignoutResponse","validateSignoutResponse","clearStaleState","staleStateAge"],"sources":["C:/Users/theoj/Desktop/WebbProject-Yr3-React18/ClientApp/node_modules/oidc-client/src/OidcClient.js"],"sourcesContent":["// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\r\n\r\nimport { Log } from './Log.js';\r\nimport { OidcClientSettings } from './OidcClientSettings.js';\r\nimport { ErrorResponse } from './ErrorResponse.js';\r\nimport { SigninRequest } from './SigninRequest.js';\r\nimport { SigninResponse } from './SigninResponse.js';\r\nimport { SignoutRequest } from './SignoutRequest.js';\r\nimport { SignoutResponse } from './SignoutResponse.js';\r\nimport { SigninState } from './SigninState.js';\r\nimport { State } from './State.js';\r\n\r\nexport class OidcClient {\r\n    constructor(settings = {}) {\r\n        if (settings instanceof OidcClientSettings) {\r\n            this._settings = settings;\r\n        }\r\n        else {\r\n            this._settings = new OidcClientSettings(settings);\r\n        }\r\n    }\r\n\r\n    get _stateStore() {\r\n        return this.settings.stateStore;\r\n    }\r\n    get _validator() {\r\n        return this.settings.validator;\r\n    }\r\n    get _metadataService() {\r\n        return this.settings.metadataService;\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n    get metadataService() {\r\n        return this._metadataService;\r\n    }\r\n\r\n    createSigninRequest({\r\n        response_type, scope, redirect_uri,\r\n        // data was meant to be the place a caller could indicate the data to\r\n        // have round tripped, but people were getting confused, so i added state (since that matches the spec)\r\n        // and so now if data is not passed, but state is then state will be used\r\n        data, state, prompt, display, max_age, ui_locales, id_token_hint, login_hint, acr_values,\r\n        resource, request, request_uri, response_mode, extraQueryParams, extraTokenParams, request_type, skipUserInfo } = {},\r\n        stateStore\r\n    ) {\r\n        Log.debug(\"OidcClient.createSigninRequest\");\r\n\r\n        let client_id = this._settings.client_id;\r\n        response_type = response_type || this._settings.response_type;\r\n        scope = scope || this._settings.scope;\r\n        redirect_uri = redirect_uri || this._settings.redirect_uri;\r\n\r\n        // id_token_hint, login_hint aren't allowed on _settings\r\n        prompt = prompt || this._settings.prompt;\r\n        display = display || this._settings.display;\r\n        max_age = max_age || this._settings.max_age;\r\n        ui_locales = ui_locales || this._settings.ui_locales;\r\n        acr_values = acr_values || this._settings.acr_values;\r\n        resource = resource || this._settings.resource;\r\n        response_mode = response_mode || this._settings.response_mode;\r\n        extraQueryParams = extraQueryParams || this._settings.extraQueryParams;\r\n        extraTokenParams = extraTokenParams || this._settings.extraTokenParams;\r\n\r\n        let authority = this._settings.authority;\r\n\r\n        if (SigninRequest.isCode(response_type) && response_type !== \"code\") {\r\n            return Promise.reject(new Error(\"OpenID Connect hybrid flow is not supported\"));\r\n        }\r\n\r\n        return this._metadataService.getAuthorizationEndpoint().then(url => {\r\n            Log.debug(\"OidcClient.createSigninRequest: Received authorization endpoint\", url);\r\n\r\n            let signinRequest = new SigninRequest({\r\n                url,\r\n                client_id,\r\n                redirect_uri,\r\n                response_type,\r\n                scope,\r\n                data: data || state,\r\n                authority,\r\n                prompt, display, max_age, ui_locales, id_token_hint, login_hint, acr_values,\r\n                resource, request, request_uri, extraQueryParams, extraTokenParams, request_type, response_mode,\r\n                client_secret: this._settings.client_secret,\r\n                skipUserInfo\r\n            });\r\n\r\n            var signinState = signinRequest.state;\r\n            stateStore = stateStore || this._stateStore;\r\n\r\n            return stateStore.set(signinState.id, signinState.toStorageString()).then(() => {\r\n                return signinRequest;\r\n            });\r\n        });\r\n    }\r\n\r\n    readSigninResponseState(url, stateStore, removeState = false) {\r\n        Log.debug(\"OidcClient.readSigninResponseState\");\r\n\r\n        let useQuery = this._settings.response_mode === \"query\" || \r\n            (!this._settings.response_mode && SigninRequest.isCode(this._settings.response_type));\r\n        let delimiter = useQuery ? \"?\" : \"#\";\r\n\r\n        var response = new SigninResponse(url, delimiter);\r\n\r\n        if (!response.state) {\r\n            Log.error(\"OidcClient.readSigninResponseState: No state in response\");\r\n            return Promise.reject(new Error(\"No state in response\"));\r\n        }\r\n\r\n        stateStore = stateStore || this._stateStore;\r\n\r\n        var stateApi = removeState ? stateStore.remove.bind(stateStore) : stateStore.get.bind(stateStore);\r\n\r\n        return stateApi(response.state).then(storedStateString => {\r\n            if (!storedStateString) {\r\n                Log.error(\"OidcClient.readSigninResponseState: No matching state found in storage\");\r\n                throw new Error(\"No matching state found in storage\");\r\n            }\r\n\r\n            let state = SigninState.fromStorageString(storedStateString);\r\n            return {state, response};\r\n        });\r\n    }\r\n\r\n    processSigninResponse(url, stateStore) {\r\n        Log.debug(\"OidcClient.processSigninResponse\");\r\n\r\n        return this.readSigninResponseState(url, stateStore, true).then(({state, response}) => {\r\n            Log.debug(\"OidcClient.processSigninResponse: Received state from storage; validating response\");\r\n            return this._validator.validateSigninResponse(state, response);\r\n        });\r\n    }\r\n\r\n    createSignoutRequest({id_token_hint, data, state, post_logout_redirect_uri, extraQueryParams, request_type } = {},\r\n        stateStore\r\n    ) {\r\n        Log.debug(\"OidcClient.createSignoutRequest\");\r\n\r\n        post_logout_redirect_uri = post_logout_redirect_uri || this._settings.post_logout_redirect_uri;\r\n        extraQueryParams = extraQueryParams || this._settings.extraQueryParams;\r\n\r\n        return this._metadataService.getEndSessionEndpoint().then(url => {\r\n            if (!url) {\r\n                Log.error(\"OidcClient.createSignoutRequest: No end session endpoint url returned\");\r\n                throw new Error(\"no end session endpoint\");\r\n            }\r\n\r\n            Log.debug(\"OidcClient.createSignoutRequest: Received end session endpoint\", url);\r\n\r\n            let request = new SignoutRequest({\r\n                url,\r\n                id_token_hint,\r\n                post_logout_redirect_uri,\r\n                data: data || state,\r\n                extraQueryParams,\r\n                request_type\r\n            });\r\n\r\n            var signoutState = request.state;\r\n            if (signoutState) {\r\n                Log.debug(\"OidcClient.createSignoutRequest: Signout request has state to persist\");\r\n\r\n                stateStore = stateStore || this._stateStore;\r\n                stateStore.set(signoutState.id, signoutState.toStorageString());\r\n            }\r\n\r\n            return request;\r\n        });\r\n    }\r\n\r\n    readSignoutResponseState(url, stateStore, removeState = false) {\r\n        Log.debug(\"OidcClient.readSignoutResponseState\");\r\n\r\n        var response = new SignoutResponse(url);\r\n        if (!response.state) {\r\n            Log.debug(\"OidcClient.readSignoutResponseState: No state in response\");\r\n\r\n            if (response.error) {\r\n                Log.warn(\"OidcClient.readSignoutResponseState: Response was error: \", response.error);\r\n                return Promise.reject(new ErrorResponse(response));\r\n            }\r\n\r\n            return Promise.resolve({state: undefined, response});\r\n        }\r\n\r\n        var stateKey = response.state;\r\n\r\n        stateStore = stateStore || this._stateStore;\r\n\r\n        var stateApi = removeState ? stateStore.remove.bind(stateStore) : stateStore.get.bind(stateStore);\r\n        return stateApi(stateKey).then(storedStateString => {\r\n            if (!storedStateString) {\r\n                Log.error(\"OidcClient.readSignoutResponseState: No matching state found in storage\");\r\n                throw new Error(\"No matching state found in storage\");\r\n            }\r\n\r\n            let state = State.fromStorageString(storedStateString);\r\n\r\n            return {state, response};\r\n        });\r\n    }\r\n\r\n    processSignoutResponse(url, stateStore) {\r\n        Log.debug(\"OidcClient.processSignoutResponse\");\r\n\r\n        return this.readSignoutResponseState(url, stateStore, true).then(({state, response}) => {\r\n            if (state) {\r\n                Log.debug(\"OidcClient.processSignoutResponse: Received state from storage; validating response\");\r\n                return this._validator.validateSignoutResponse(state, response);\r\n            }\r\n            else {\r\n                Log.debug(\"OidcClient.processSignoutResponse: No state from storage; skipping validating response\");\r\n                return response;\r\n            }\r\n        });\r\n    }\r\n\r\n    clearStaleState(stateStore) {\r\n        Log.debug(\"OidcClient.clearStaleState\");\r\n\r\n        stateStore = stateStore || this._stateStore;\r\n\r\n        return State.clearStaleState(stateStore, this.settings.staleStateAge);\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAN,CAAiB;EACpBC,WAAW,GAAgB;IAAA,IAAfC,QAAe,uEAAJ,EAAI;;IACvB,IAAIA,QAAQ,YAAYV,kBAAxB,EAA4C;MACxC,KAAKW,SAAL,GAAiBD,QAAjB;IACH,CAFD,MAGK;MACD,KAAKC,SAAL,GAAiB,IAAIX,kBAAJ,CAAuBU,QAAvB,CAAjB;IACH;EACJ;;EAEc,IAAXE,WAAW,GAAG;IACd,OAAO,KAAKF,QAAL,CAAcG,UAArB;EACH;;EACa,IAAVC,UAAU,GAAG;IACb,OAAO,KAAKJ,QAAL,CAAcK,SAArB;EACH;;EACmB,IAAhBC,gBAAgB,GAAG;IACnB,OAAO,KAAKN,QAAL,CAAcO,eAArB;EACH;;EAEW,IAARP,QAAQ,GAAG;IACX,OAAO,KAAKC,SAAZ;EACH;;EACkB,IAAfM,eAAe,GAAG;IAClB,OAAO,KAAKD,gBAAZ;EACH;;EAEDE,mBAAmB,GAQjB;IAAA,IARkB;MAChBC,aADgB;MACDC,KADC;MACMC,YADN;MAEhB;MACA;MACA;MACAC,IALgB;MAKVC,KALU;MAKHC,MALG;MAKKC,OALL;MAKcC,OALd;MAKuBC,UALvB;MAKmCC,aALnC;MAKkDC,UALlD;MAK8DC,UAL9D;MAMhBC,QANgB;MAMNC,OANM;MAMGC,WANH;MAMgBC,aANhB;MAM+BC,gBAN/B;MAMiDC,gBANjD;MAMmEC,YANnE;MAMiFC;IANjF,CAQlB,uEAFoH,EAEpH;IAAA,IADEzB,UACF;IACEd,GAAG,CAACwC,KAAJ,CAAU,gCAAV;IAEA,IAAIC,SAAS,GAAG,KAAK7B,SAAL,CAAe6B,SAA/B;IACArB,aAAa,GAAGA,aAAa,IAAI,KAAKR,SAAL,CAAeQ,aAAhD;IACAC,KAAK,GAAGA,KAAK,IAAI,KAAKT,SAAL,CAAeS,KAAhC;IACAC,YAAY,GAAGA,YAAY,IAAI,KAAKV,SAAL,CAAeU,YAA9C,CANF,CAQE;;IACAG,MAAM,GAAGA,MAAM,IAAI,KAAKb,SAAL,CAAea,MAAlC;IACAC,OAAO,GAAGA,OAAO,IAAI,KAAKd,SAAL,CAAec,OAApC;IACAC,OAAO,GAAGA,OAAO,IAAI,KAAKf,SAAL,CAAee,OAApC;IACAC,UAAU,GAAGA,UAAU,IAAI,KAAKhB,SAAL,CAAegB,UAA1C;IACAG,UAAU,GAAGA,UAAU,IAAI,KAAKnB,SAAL,CAAemB,UAA1C;IACAC,QAAQ,GAAGA,QAAQ,IAAI,KAAKpB,SAAL,CAAeoB,QAAtC;IACAG,aAAa,GAAGA,aAAa,IAAI,KAAKvB,SAAL,CAAeuB,aAAhD;IACAC,gBAAgB,GAAGA,gBAAgB,IAAI,KAAKxB,SAAL,CAAewB,gBAAtD;IACAC,gBAAgB,GAAGA,gBAAgB,IAAI,KAAKzB,SAAL,CAAeyB,gBAAtD;IAEA,IAAIK,SAAS,GAAG,KAAK9B,SAAL,CAAe8B,SAA/B;;IAEA,IAAIvC,aAAa,CAACwC,MAAd,CAAqBvB,aAArB,KAAuCA,aAAa,KAAK,MAA7D,EAAqE;MACjE,OAAOwB,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,6CAAV,CAAf,CAAP;IACH;;IAED,OAAO,KAAK7B,gBAAL,CAAsB8B,wBAAtB,GAAiDC,IAAjD,CAAsDC,GAAG,IAAI;MAChEjD,GAAG,CAACwC,KAAJ,CAAU,iEAAV,EAA6ES,GAA7E;MAEA,IAAIC,aAAa,GAAG,IAAI/C,aAAJ,CAAkB;QAClC8C,GADkC;QAElCR,SAFkC;QAGlCnB,YAHkC;QAIlCF,aAJkC;QAKlCC,KALkC;QAMlCE,IAAI,EAAEA,IAAI,IAAIC,KANoB;QAOlCkB,SAPkC;QAQlCjB,MARkC;QAQ1BC,OAR0B;QAQjBC,OARiB;QAQRC,UARQ;QAQIC,aARJ;QAQmBC,UARnB;QAQ+BC,UAR/B;QASlCC,QATkC;QASxBC,OATwB;QASfC,WATe;QASFE,gBATE;QASgBC,gBAThB;QASkCC,YATlC;QASgDH,aAThD;QAUlCgB,aAAa,EAAE,KAAKvC,SAAL,CAAeuC,aAVI;QAWlCZ;MAXkC,CAAlB,CAApB;MAcA,IAAIa,WAAW,GAAGF,aAAa,CAAC1B,KAAhC;MACAV,UAAU,GAAGA,UAAU,IAAI,KAAKD,WAAhC;MAEA,OAAOC,UAAU,CAACuC,GAAX,CAAeD,WAAW,CAACE,EAA3B,EAA+BF,WAAW,CAACG,eAAZ,EAA/B,EAA8DP,IAA9D,CAAmE,MAAM;QAC5E,OAAOE,aAAP;MACH,CAFM,CAAP;IAGH,CAvBM,CAAP;EAwBH;;EAEDM,uBAAuB,CAACP,GAAD,EAAMnC,UAAN,EAAuC;IAAA,IAArB2C,WAAqB,uEAAP,KAAO;IAC1DzD,GAAG,CAACwC,KAAJ,CAAU,oCAAV;IAEA,IAAIkB,QAAQ,GAAG,KAAK9C,SAAL,CAAeuB,aAAf,KAAiC,OAAjC,IACV,CAAC,KAAKvB,SAAL,CAAeuB,aAAhB,IAAiChC,aAAa,CAACwC,MAAd,CAAqB,KAAK/B,SAAL,CAAeQ,aAApC,CADtC;IAEA,IAAIuC,SAAS,GAAGD,QAAQ,GAAG,GAAH,GAAS,GAAjC;IAEA,IAAIE,QAAQ,GAAG,IAAIxD,cAAJ,CAAmB6C,GAAnB,EAAwBU,SAAxB,CAAf;;IAEA,IAAI,CAACC,QAAQ,CAACpC,KAAd,EAAqB;MACjBxB,GAAG,CAAC6D,KAAJ,CAAU,0DAAV;MACA,OAAOjB,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,sBAAV,CAAf,CAAP;IACH;;IAEDhC,UAAU,GAAGA,UAAU,IAAI,KAAKD,WAAhC;IAEA,IAAIiD,QAAQ,GAAGL,WAAW,GAAG3C,UAAU,CAACiD,MAAX,CAAkBC,IAAlB,CAAuBlD,UAAvB,CAAH,GAAwCA,UAAU,CAACmD,GAAX,CAAeD,IAAf,CAAoBlD,UAApB,CAAlE;IAEA,OAAOgD,QAAQ,CAACF,QAAQ,CAACpC,KAAV,CAAR,CAAyBwB,IAAzB,CAA8BkB,iBAAiB,IAAI;MACtD,IAAI,CAACA,iBAAL,EAAwB;QACpBlE,GAAG,CAAC6D,KAAJ,CAAU,wEAAV;QACA,MAAM,IAAIf,KAAJ,CAAU,oCAAV,CAAN;MACH;;MAED,IAAItB,KAAK,GAAGjB,WAAW,CAAC4D,iBAAZ,CAA8BD,iBAA9B,CAAZ;MACA,OAAO;QAAC1C,KAAD;QAAQoC;MAAR,CAAP;IACH,CARM,CAAP;EASH;;EAEDQ,qBAAqB,CAACnB,GAAD,EAAMnC,UAAN,EAAkB;IACnCd,GAAG,CAACwC,KAAJ,CAAU,kCAAV;IAEA,OAAO,KAAKgB,uBAAL,CAA6BP,GAA7B,EAAkCnC,UAAlC,EAA8C,IAA9C,EAAoDkC,IAApD,CAAyD,QAAuB;MAAA,IAAtB;QAACxB,KAAD;QAAQoC;MAAR,CAAsB;MACnF5D,GAAG,CAACwC,KAAJ,CAAU,oFAAV;MACA,OAAO,KAAKzB,UAAL,CAAgBsD,sBAAhB,CAAuC7C,KAAvC,EAA8CoC,QAA9C,CAAP;IACH,CAHM,CAAP;EAIH;;EAEDU,oBAAoB,GAElB;IAAA,IAFmB;MAACzC,aAAD;MAAgBN,IAAhB;MAAsBC,KAAtB;MAA6B+C,wBAA7B;MAAuDnC,gBAAvD;MAAyEE;IAAzE,CAEnB,uEAF6G,EAE7G;IAAA,IADExB,UACF;IACEd,GAAG,CAACwC,KAAJ,CAAU,iCAAV;IAEA+B,wBAAwB,GAAGA,wBAAwB,IAAI,KAAK3D,SAAL,CAAe2D,wBAAtE;IACAnC,gBAAgB,GAAGA,gBAAgB,IAAI,KAAKxB,SAAL,CAAewB,gBAAtD;IAEA,OAAO,KAAKnB,gBAAL,CAAsBuD,qBAAtB,GAA8CxB,IAA9C,CAAmDC,GAAG,IAAI;MAC7D,IAAI,CAACA,GAAL,EAAU;QACNjD,GAAG,CAAC6D,KAAJ,CAAU,uEAAV;QACA,MAAM,IAAIf,KAAJ,CAAU,yBAAV,CAAN;MACH;;MAED9C,GAAG,CAACwC,KAAJ,CAAU,gEAAV,EAA4ES,GAA5E;MAEA,IAAIhB,OAAO,GAAG,IAAI5B,cAAJ,CAAmB;QAC7B4C,GAD6B;QAE7BpB,aAF6B;QAG7B0C,wBAH6B;QAI7BhD,IAAI,EAAEA,IAAI,IAAIC,KAJe;QAK7BY,gBAL6B;QAM7BE;MAN6B,CAAnB,CAAd;MASA,IAAImC,YAAY,GAAGxC,OAAO,CAACT,KAA3B;;MACA,IAAIiD,YAAJ,EAAkB;QACdzE,GAAG,CAACwC,KAAJ,CAAU,uEAAV;QAEA1B,UAAU,GAAGA,UAAU,IAAI,KAAKD,WAAhC;QACAC,UAAU,CAACuC,GAAX,CAAeoB,YAAY,CAACnB,EAA5B,EAAgCmB,YAAY,CAAClB,eAAb,EAAhC;MACH;;MAED,OAAOtB,OAAP;IACH,CA1BM,CAAP;EA2BH;;EAEDyC,wBAAwB,CAACzB,GAAD,EAAMnC,UAAN,EAAuC;IAAA,IAArB2C,WAAqB,uEAAP,KAAO;IAC3DzD,GAAG,CAACwC,KAAJ,CAAU,qCAAV;IAEA,IAAIoB,QAAQ,GAAG,IAAItD,eAAJ,CAAoB2C,GAApB,CAAf;;IACA,IAAI,CAACW,QAAQ,CAACpC,KAAd,EAAqB;MACjBxB,GAAG,CAACwC,KAAJ,CAAU,2DAAV;;MAEA,IAAIoB,QAAQ,CAACC,KAAb,EAAoB;QAChB7D,GAAG,CAAC2E,IAAJ,CAAS,2DAAT,EAAsEf,QAAQ,CAACC,KAA/E;QACA,OAAOjB,OAAO,CAACC,MAAR,CAAe,IAAI3C,aAAJ,CAAkB0D,QAAlB,CAAf,CAAP;MACH;;MAED,OAAOhB,OAAO,CAACgC,OAAR,CAAgB;QAACpD,KAAK,EAAEqD,SAAR;QAAmBjB;MAAnB,CAAhB,CAAP;IACH;;IAED,IAAIkB,QAAQ,GAAGlB,QAAQ,CAACpC,KAAxB;IAEAV,UAAU,GAAGA,UAAU,IAAI,KAAKD,WAAhC;IAEA,IAAIiD,QAAQ,GAAGL,WAAW,GAAG3C,UAAU,CAACiD,MAAX,CAAkBC,IAAlB,CAAuBlD,UAAvB,CAAH,GAAwCA,UAAU,CAACmD,GAAX,CAAeD,IAAf,CAAoBlD,UAApB,CAAlE;IACA,OAAOgD,QAAQ,CAACgB,QAAD,CAAR,CAAmB9B,IAAnB,CAAwBkB,iBAAiB,IAAI;MAChD,IAAI,CAACA,iBAAL,EAAwB;QACpBlE,GAAG,CAAC6D,KAAJ,CAAU,yEAAV;QACA,MAAM,IAAIf,KAAJ,CAAU,oCAAV,CAAN;MACH;;MAED,IAAItB,KAAK,GAAGhB,KAAK,CAAC2D,iBAAN,CAAwBD,iBAAxB,CAAZ;MAEA,OAAO;QAAC1C,KAAD;QAAQoC;MAAR,CAAP;IACH,CATM,CAAP;EAUH;;EAEDmB,sBAAsB,CAAC9B,GAAD,EAAMnC,UAAN,EAAkB;IACpCd,GAAG,CAACwC,KAAJ,CAAU,mCAAV;IAEA,OAAO,KAAKkC,wBAAL,CAA8BzB,GAA9B,EAAmCnC,UAAnC,EAA+C,IAA/C,EAAqDkC,IAArD,CAA0D,SAAuB;MAAA,IAAtB;QAACxB,KAAD;QAAQoC;MAAR,CAAsB;;MACpF,IAAIpC,KAAJ,EAAW;QACPxB,GAAG,CAACwC,KAAJ,CAAU,qFAAV;QACA,OAAO,KAAKzB,UAAL,CAAgBiE,uBAAhB,CAAwCxD,KAAxC,EAA+CoC,QAA/C,CAAP;MACH,CAHD,MAIK;QACD5D,GAAG,CAACwC,KAAJ,CAAU,wFAAV;QACA,OAAOoB,QAAP;MACH;IACJ,CATM,CAAP;EAUH;;EAEDqB,eAAe,CAACnE,UAAD,EAAa;IACxBd,GAAG,CAACwC,KAAJ,CAAU,4BAAV;IAEA1B,UAAU,GAAGA,UAAU,IAAI,KAAKD,WAAhC;IAEA,OAAOL,KAAK,CAACyE,eAAN,CAAsBnE,UAAtB,EAAkC,KAAKH,QAAL,CAAcuE,aAAhD,CAAP;EACH;;AAtNmB"},"metadata":{},"sourceType":"module"}