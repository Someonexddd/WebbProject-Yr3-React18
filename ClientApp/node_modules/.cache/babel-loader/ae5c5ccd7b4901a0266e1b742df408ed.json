{"ast":null,"code":"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport { Log } from './Log.js';\nimport { Global } from './Global.js';\nimport { Event } from './Event.js';\nconst TimerDuration = 5; // seconds\n\nexport class Timer extends Event {\n  constructor(name) {\n    let timer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Global.timer;\n    let nowFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    super(name);\n    this._timer = timer;\n\n    if (nowFunc) {\n      this._nowFunc = nowFunc;\n    } else {\n      this._nowFunc = () => Date.now() / 1000;\n    }\n  }\n\n  get now() {\n    return parseInt(this._nowFunc());\n  }\n\n  init(duration) {\n    if (duration <= 0) {\n      duration = 1;\n    }\n\n    duration = parseInt(duration);\n    var expiration = this.now + duration;\n\n    if (this.expiration === expiration && this._timerHandle) {\n      // no need to reinitialize to same expiration, so bail out\n      Log.debug(\"Timer.init timer \" + this._name + \" skipping initialization since already initialized for expiration:\", this.expiration);\n      return;\n    }\n\n    this.cancel();\n    Log.debug(\"Timer.init timer \" + this._name + \" for duration:\", duration);\n    this._expiration = expiration; // we're using a fairly short timer and then checking the expiration in the\n    // callback to handle scenarios where the browser device sleeps, and then\n    // the timers end up getting delayed.\n\n    var timerDuration = TimerDuration;\n\n    if (duration < timerDuration) {\n      timerDuration = duration;\n    }\n\n    this._timerHandle = this._timer.setInterval(this._callback.bind(this), timerDuration * 1000);\n  }\n\n  get expiration() {\n    return this._expiration;\n  }\n\n  cancel() {\n    if (this._timerHandle) {\n      Log.debug(\"Timer.cancel: \", this._name);\n\n      this._timer.clearInterval(this._timerHandle);\n\n      this._timerHandle = null;\n    }\n  }\n\n  _callback() {\n    var diff = this._expiration - this.now;\n    Log.debug(\"Timer.callback; \" + this._name + \" timer expires in:\", diff);\n\n    if (this._expiration <= this.now) {\n      this.cancel();\n      super.raise();\n    }\n  }\n\n}","map":{"version":3,"names":["Log","Global","Event","TimerDuration","Timer","constructor","name","timer","nowFunc","undefined","_timer","_nowFunc","Date","now","parseInt","init","duration","expiration","_timerHandle","debug","_name","cancel","_expiration","timerDuration","setInterval","_callback","bind","clearInterval","diff","raise"],"sources":["C:/Users/theoj/Desktop/WebbProject-Yr3-React18/ClientApp/node_modules/oidc-client/src/Timer.js"],"sourcesContent":["// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\r\n\r\nimport { Log } from './Log.js';\r\nimport { Global } from './Global.js';\r\nimport { Event } from './Event.js';\r\n\r\nconst TimerDuration = 5; // seconds\r\n\r\nexport class Timer extends Event {\r\n\r\n    constructor(name, timer = Global.timer, nowFunc = undefined) {\r\n        super(name);\r\n        this._timer = timer;\r\n\r\n        if (nowFunc) {\r\n            this._nowFunc = nowFunc;\r\n        }\r\n        else {\r\n            this._nowFunc = () => Date.now() / 1000;\r\n        }\r\n    }\r\n\r\n    get now() {\r\n        return parseInt(this._nowFunc());\r\n    }\r\n\r\n    init(duration) {\r\n        if (duration <= 0) {\r\n            duration = 1;\r\n        }\r\n        duration = parseInt(duration);\r\n\r\n        var expiration = this.now + duration;\r\n        if (this.expiration === expiration && this._timerHandle) {\r\n            // no need to reinitialize to same expiration, so bail out\r\n            Log.debug(\"Timer.init timer \" + this._name + \" skipping initialization since already initialized for expiration:\", this.expiration);\r\n            return;\r\n        }\r\n\r\n        this.cancel();\r\n\r\n        Log.debug(\"Timer.init timer \" + this._name + \" for duration:\", duration);\r\n        this._expiration = expiration;\r\n\r\n        // we're using a fairly short timer and then checking the expiration in the\r\n        // callback to handle scenarios where the browser device sleeps, and then\r\n        // the timers end up getting delayed.\r\n        var timerDuration = TimerDuration;\r\n        if (duration < timerDuration) {\r\n            timerDuration = duration;\r\n        }\r\n        this._timerHandle = this._timer.setInterval(this._callback.bind(this), timerDuration * 1000);\r\n    }\r\n    \r\n    get expiration() {\r\n        return this._expiration;\r\n    }\r\n\r\n    cancel() {\r\n        if (this._timerHandle) {\r\n            Log.debug(\"Timer.cancel: \", this._name);\r\n            this._timer.clearInterval(this._timerHandle);\r\n            this._timerHandle = null;\r\n        }\r\n    }\r\n\r\n    _callback() {\r\n        var diff = this._expiration - this.now;\r\n        Log.debug(\"Timer.callback; \" + this._name + \" timer expires in:\", diff);\r\n\r\n        if (this._expiration <= this.now) {\r\n            this.cancel();\r\n            super.raise();\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,CAAtB,C,CAAyB;;AAEzB,OAAO,MAAMC,KAAN,SAAoBF,KAApB,CAA0B;EAE7BG,WAAW,CAACC,IAAD,EAAkD;IAAA,IAA3CC,KAA2C,uEAAnCN,MAAM,CAACM,KAA4B;IAAA,IAArBC,OAAqB,uEAAXC,SAAW;IACzD,MAAMH,IAAN;IACA,KAAKI,MAAL,GAAcH,KAAd;;IAEA,IAAIC,OAAJ,EAAa;MACT,KAAKG,QAAL,GAAgBH,OAAhB;IACH,CAFD,MAGK;MACD,KAAKG,QAAL,GAAgB,MAAMC,IAAI,CAACC,GAAL,KAAa,IAAnC;IACH;EACJ;;EAEM,IAAHA,GAAG,GAAG;IACN,OAAOC,QAAQ,CAAC,KAAKH,QAAL,EAAD,CAAf;EACH;;EAEDI,IAAI,CAACC,QAAD,EAAW;IACX,IAAIA,QAAQ,IAAI,CAAhB,EAAmB;MACfA,QAAQ,GAAG,CAAX;IACH;;IACDA,QAAQ,GAAGF,QAAQ,CAACE,QAAD,CAAnB;IAEA,IAAIC,UAAU,GAAG,KAAKJ,GAAL,GAAWG,QAA5B;;IACA,IAAI,KAAKC,UAAL,KAAoBA,UAApB,IAAkC,KAAKC,YAA3C,EAAyD;MACrD;MACAlB,GAAG,CAACmB,KAAJ,CAAU,sBAAsB,KAAKC,KAA3B,GAAmC,oEAA7C,EAAmH,KAAKH,UAAxH;MACA;IACH;;IAED,KAAKI,MAAL;IAEArB,GAAG,CAACmB,KAAJ,CAAU,sBAAsB,KAAKC,KAA3B,GAAmC,gBAA7C,EAA+DJ,QAA/D;IACA,KAAKM,WAAL,GAAmBL,UAAnB,CAhBW,CAkBX;IACA;IACA;;IACA,IAAIM,aAAa,GAAGpB,aAApB;;IACA,IAAIa,QAAQ,GAAGO,aAAf,EAA8B;MAC1BA,aAAa,GAAGP,QAAhB;IACH;;IACD,KAAKE,YAAL,GAAoB,KAAKR,MAAL,CAAYc,WAAZ,CAAwB,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAxB,EAAmDH,aAAa,GAAG,IAAnE,CAApB;EACH;;EAEa,IAAVN,UAAU,GAAG;IACb,OAAO,KAAKK,WAAZ;EACH;;EAEDD,MAAM,GAAG;IACL,IAAI,KAAKH,YAAT,EAAuB;MACnBlB,GAAG,CAACmB,KAAJ,CAAU,gBAAV,EAA4B,KAAKC,KAAjC;;MACA,KAAKV,MAAL,CAAYiB,aAAZ,CAA0B,KAAKT,YAA/B;;MACA,KAAKA,YAAL,GAAoB,IAApB;IACH;EACJ;;EAEDO,SAAS,GAAG;IACR,IAAIG,IAAI,GAAG,KAAKN,WAAL,GAAmB,KAAKT,GAAnC;IACAb,GAAG,CAACmB,KAAJ,CAAU,qBAAqB,KAAKC,KAA1B,GAAkC,oBAA5C,EAAkEQ,IAAlE;;IAEA,IAAI,KAAKN,WAAL,IAAoB,KAAKT,GAA7B,EAAkC;MAC9B,KAAKQ,MAAL;MACA,MAAMQ,KAAN;IACH;EACJ;;AAlE4B"},"metadata":{},"sourceType":"module"}