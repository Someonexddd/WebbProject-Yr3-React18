{"ast":null,"code":"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport { Log } from './Log.js';\nimport { Global } from './Global.js';\nexport class UrlUtility {\n  static addQueryParam(url, name, value) {\n    if (url.indexOf('?') < 0) {\n      url += \"?\";\n    }\n\n    if (url[url.length - 1] !== \"?\") {\n      url += \"&\";\n    }\n\n    url += encodeURIComponent(name);\n    url += \"=\";\n    url += encodeURIComponent(value);\n    return url;\n  }\n\n  static parseUrlFragment(value) {\n    let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"#\";\n    let global = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Global;\n\n    if (typeof value !== 'string') {\n      value = global.location.href;\n    }\n\n    var idx = value.lastIndexOf(delimiter);\n\n    if (idx >= 0) {\n      value = value.substr(idx + 1);\n    }\n\n    if (delimiter === \"?\") {\n      // if we're doing query, then strip off hash fragment before we parse\n      idx = value.indexOf('#');\n\n      if (idx >= 0) {\n        value = value.substr(0, idx);\n      }\n    }\n\n    var params = {},\n        regex = /([^&=]+)=([^&]*)/g,\n        m;\n    var counter = 0;\n\n    while (m = regex.exec(value)) {\n      params[decodeURIComponent(m[1])] = decodeURIComponent(m[2].replace(/\\+/g, ' '));\n\n      if (counter++ > 50) {\n        Log.error(\"UrlUtility.parseUrlFragment: response exceeded expected number of parameters\", value);\n        return {\n          error: \"Response exceeded expected number of parameters\"\n        };\n      }\n    }\n\n    for (var prop in params) {\n      return params;\n    }\n\n    return {};\n  }\n\n}","map":{"version":3,"names":["Log","Global","UrlUtility","addQueryParam","url","name","value","indexOf","length","encodeURIComponent","parseUrlFragment","delimiter","global","location","href","idx","lastIndexOf","substr","params","regex","m","counter","exec","decodeURIComponent","replace","error","prop"],"sources":["C:/Users/theoj/Desktop/WebbProject-Yr3-React18/ClientApp/node_modules/oidc-client/src/UrlUtility.js"],"sourcesContent":["// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\r\n\r\nimport { Log } from './Log.js';\r\nimport { Global } from './Global.js';\r\n\r\nexport class UrlUtility {\r\n    static addQueryParam(url, name, value) {\r\n        if (url.indexOf('?') < 0) {\r\n            url += \"?\";\r\n        }\r\n\r\n        if (url[url.length - 1] !== \"?\") {\r\n            url += \"&\";\r\n        }\r\n\r\n        url += encodeURIComponent(name);\r\n        url += \"=\";\r\n        url += encodeURIComponent(value);\r\n\r\n        return url;\r\n    }\r\n\r\n    static parseUrlFragment(value, delimiter = \"#\", global = Global) {\r\n        if (typeof value !== 'string'){\r\n            value = global.location.href;\r\n        }\r\n\r\n        var idx = value.lastIndexOf(delimiter);\r\n        if (idx >= 0) {\r\n            value = value.substr(idx + 1);\r\n        }\r\n\r\n        if (delimiter === \"?\") {\r\n            // if we're doing query, then strip off hash fragment before we parse\r\n            idx = value.indexOf('#');\r\n            if (idx >= 0) {\r\n                value = value.substr(0, idx);\r\n            }\r\n        }\r\n\r\n        var params = {},\r\n            regex = /([^&=]+)=([^&]*)/g,\r\n            m;\r\n\r\n        var counter = 0;\r\n        while (m = regex.exec(value)) {\r\n            params[decodeURIComponent(m[1])] = decodeURIComponent(m[2].replace(/\\+/g, ' '));\r\n            if (counter++ > 50) {\r\n                Log.error(\"UrlUtility.parseUrlFragment: response exceeded expected number of parameters\", value);\r\n                return {\r\n                    error: \"Response exceeded expected number of parameters\"\r\n                };\r\n            }\r\n        }\r\n\r\n        for (var prop in params) {\r\n            return params;\r\n        }\r\n\r\n        return {};\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,OAAO,MAAMC,UAAN,CAAiB;EACA,OAAbC,aAAa,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmB;IACnC,IAAIF,GAAG,CAACG,OAAJ,CAAY,GAAZ,IAAmB,CAAvB,EAA0B;MACtBH,GAAG,IAAI,GAAP;IACH;;IAED,IAAIA,GAAG,CAACA,GAAG,CAACI,MAAJ,GAAa,CAAd,CAAH,KAAwB,GAA5B,EAAiC;MAC7BJ,GAAG,IAAI,GAAP;IACH;;IAEDA,GAAG,IAAIK,kBAAkB,CAACJ,IAAD,CAAzB;IACAD,GAAG,IAAI,GAAP;IACAA,GAAG,IAAIK,kBAAkB,CAACH,KAAD,CAAzB;IAEA,OAAOF,GAAP;EACH;;EAEsB,OAAhBM,gBAAgB,CAACJ,KAAD,EAA0C;IAAA,IAAlCK,SAAkC,uEAAtB,GAAsB;IAAA,IAAjBC,MAAiB,uEAARX,MAAQ;;IAC7D,IAAI,OAAOK,KAAP,KAAiB,QAArB,EAA8B;MAC1BA,KAAK,GAAGM,MAAM,CAACC,QAAP,CAAgBC,IAAxB;IACH;;IAED,IAAIC,GAAG,GAAGT,KAAK,CAACU,WAAN,CAAkBL,SAAlB,CAAV;;IACA,IAAII,GAAG,IAAI,CAAX,EAAc;MACVT,KAAK,GAAGA,KAAK,CAACW,MAAN,CAAaF,GAAG,GAAG,CAAnB,CAAR;IACH;;IAED,IAAIJ,SAAS,KAAK,GAAlB,EAAuB;MACnB;MACAI,GAAG,GAAGT,KAAK,CAACC,OAAN,CAAc,GAAd,CAAN;;MACA,IAAIQ,GAAG,IAAI,CAAX,EAAc;QACVT,KAAK,GAAGA,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBF,GAAhB,CAAR;MACH;IACJ;;IAED,IAAIG,MAAM,GAAG,EAAb;IAAA,IACIC,KAAK,GAAG,mBADZ;IAAA,IAEIC,CAFJ;IAIA,IAAIC,OAAO,GAAG,CAAd;;IACA,OAAOD,CAAC,GAAGD,KAAK,CAACG,IAAN,CAAWhB,KAAX,CAAX,EAA8B;MAC1BY,MAAM,CAACK,kBAAkB,CAACH,CAAC,CAAC,CAAD,CAAF,CAAnB,CAAN,GAAmCG,kBAAkB,CAACH,CAAC,CAAC,CAAD,CAAD,CAAKI,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAD,CAArD;;MACA,IAAIH,OAAO,KAAK,EAAhB,EAAoB;QAChBrB,GAAG,CAACyB,KAAJ,CAAU,8EAAV,EAA0FnB,KAA1F;QACA,OAAO;UACHmB,KAAK,EAAE;QADJ,CAAP;MAGH;IACJ;;IAED,KAAK,IAAIC,IAAT,IAAiBR,MAAjB,EAAyB;MACrB,OAAOA,MAAP;IACH;;IAED,OAAO,EAAP;EACH;;AAvDmB"},"metadata":{},"sourceType":"module"}