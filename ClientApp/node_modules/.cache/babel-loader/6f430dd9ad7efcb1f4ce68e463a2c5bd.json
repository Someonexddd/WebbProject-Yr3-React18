{"ast":null,"code":"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport { UrlUtility } from './UrlUtility.js';\nconst OidcScope = \"openid\";\nexport class SigninResponse {\n  constructor(url) {\n    let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"#\";\n    var values = UrlUtility.parseUrlFragment(url, delimiter);\n    this.error = values.error;\n    this.error_description = values.error_description;\n    this.error_uri = values.error_uri;\n    this.code = values.code;\n    this.state = values.state;\n    this.id_token = values.id_token;\n    this.session_state = values.session_state;\n    this.access_token = values.access_token;\n    this.token_type = values.token_type;\n    this.scope = values.scope;\n    this.profile = undefined; // will be set from ResponseValidator\n\n    this.expires_in = values.expires_in;\n  }\n\n  get expires_in() {\n    if (this.expires_at) {\n      let now = parseInt(Date.now() / 1000);\n      return this.expires_at - now;\n    }\n\n    return undefined;\n  }\n\n  set expires_in(value) {\n    let expires_in = parseInt(value);\n\n    if (typeof expires_in === 'number' && expires_in > 0) {\n      let now = parseInt(Date.now() / 1000);\n      this.expires_at = now + expires_in;\n    }\n  }\n\n  get expired() {\n    let expires_in = this.expires_in;\n\n    if (expires_in !== undefined) {\n      return expires_in <= 0;\n    }\n\n    return undefined;\n  }\n\n  get scopes() {\n    return (this.scope || \"\").split(\" \");\n  }\n\n  get isOpenIdConnect() {\n    return this.scopes.indexOf(OidcScope) >= 0 || !!this.id_token;\n  }\n\n}","map":{"version":3,"names":["UrlUtility","OidcScope","SigninResponse","constructor","url","delimiter","values","parseUrlFragment","error","error_description","error_uri","code","state","id_token","session_state","access_token","token_type","scope","profile","undefined","expires_in","expires_at","now","parseInt","Date","value","expired","scopes","split","isOpenIdConnect","indexOf"],"sources":["C:/Users/theoj/Desktop/WebbProject-Yr3-React18/ClientApp/node_modules/oidc-client/src/SigninResponse.js"],"sourcesContent":["// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\r\n\r\nimport { UrlUtility } from './UrlUtility.js';\r\n\r\nconst OidcScope = \"openid\";\r\n\r\nexport class SigninResponse {\r\n    constructor(url, delimiter = \"#\") {\r\n\r\n        var values = UrlUtility.parseUrlFragment(url, delimiter);\r\n\r\n        this.error = values.error;\r\n        this.error_description = values.error_description;\r\n        this.error_uri = values.error_uri;\r\n\r\n        this.code = values.code;\r\n        this.state = values.state;\r\n        this.id_token = values.id_token;\r\n        this.session_state = values.session_state;\r\n        this.access_token = values.access_token;\r\n        this.token_type = values.token_type;\r\n        this.scope = values.scope;\r\n        this.profile = undefined; // will be set from ResponseValidator\r\n\r\n        this.expires_in = values.expires_in;\r\n    }\r\n\r\n    get expires_in() {\r\n        if (this.expires_at) {\r\n            let now = parseInt(Date.now() / 1000);\r\n            return this.expires_at - now;\r\n        }\r\n        return undefined;\r\n    }\r\n    set expires_in(value){\r\n        let expires_in = parseInt(value);\r\n        if (typeof expires_in === 'number' && expires_in > 0) {\r\n            let now = parseInt(Date.now() / 1000);\r\n            this.expires_at = now + expires_in;\r\n        }\r\n    }\r\n\r\n    get expired() {\r\n        let expires_in = this.expires_in;\r\n        if (expires_in !== undefined) {\r\n            return expires_in <= 0;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get scopes() {\r\n        return (this.scope || \"\").split(\" \");\r\n    }\r\n\r\n    get isOpenIdConnect() {\r\n        return this.scopes.indexOf(OidcScope) >= 0 || !!this.id_token;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,UAAT,QAA2B,iBAA3B;AAEA,MAAMC,SAAS,GAAG,QAAlB;AAEA,OAAO,MAAMC,cAAN,CAAqB;EACxBC,WAAW,CAACC,GAAD,EAAuB;IAAA,IAAjBC,SAAiB,uEAAL,GAAK;IAE9B,IAAIC,MAAM,GAAGN,UAAU,CAACO,gBAAX,CAA4BH,GAA5B,EAAiCC,SAAjC,CAAb;IAEA,KAAKG,KAAL,GAAaF,MAAM,CAACE,KAApB;IACA,KAAKC,iBAAL,GAAyBH,MAAM,CAACG,iBAAhC;IACA,KAAKC,SAAL,GAAiBJ,MAAM,CAACI,SAAxB;IAEA,KAAKC,IAAL,GAAYL,MAAM,CAACK,IAAnB;IACA,KAAKC,KAAL,GAAaN,MAAM,CAACM,KAApB;IACA,KAAKC,QAAL,GAAgBP,MAAM,CAACO,QAAvB;IACA,KAAKC,aAAL,GAAqBR,MAAM,CAACQ,aAA5B;IACA,KAAKC,YAAL,GAAoBT,MAAM,CAACS,YAA3B;IACA,KAAKC,UAAL,GAAkBV,MAAM,CAACU,UAAzB;IACA,KAAKC,KAAL,GAAaX,MAAM,CAACW,KAApB;IACA,KAAKC,OAAL,GAAeC,SAAf,CAf8B,CAeJ;;IAE1B,KAAKC,UAAL,GAAkBd,MAAM,CAACc,UAAzB;EACH;;EAEa,IAAVA,UAAU,GAAG;IACb,IAAI,KAAKC,UAAT,EAAqB;MACjB,IAAIC,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACF,GAAL,KAAa,IAAd,CAAlB;MACA,OAAO,KAAKD,UAAL,GAAkBC,GAAzB;IACH;;IACD,OAAOH,SAAP;EACH;;EACa,IAAVC,UAAU,CAACK,KAAD,EAAO;IACjB,IAAIL,UAAU,GAAGG,QAAQ,CAACE,KAAD,CAAzB;;IACA,IAAI,OAAOL,UAAP,KAAsB,QAAtB,IAAkCA,UAAU,GAAG,CAAnD,EAAsD;MAClD,IAAIE,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACF,GAAL,KAAa,IAAd,CAAlB;MACA,KAAKD,UAAL,GAAkBC,GAAG,GAAGF,UAAxB;IACH;EACJ;;EAEU,IAAPM,OAAO,GAAG;IACV,IAAIN,UAAU,GAAG,KAAKA,UAAtB;;IACA,IAAIA,UAAU,KAAKD,SAAnB,EAA8B;MAC1B,OAAOC,UAAU,IAAI,CAArB;IACH;;IACD,OAAOD,SAAP;EACH;;EAES,IAANQ,MAAM,GAAG;IACT,OAAO,CAAC,KAAKV,KAAL,IAAc,EAAf,EAAmBW,KAAnB,CAAyB,GAAzB,CAAP;EACH;;EAEkB,IAAfC,eAAe,GAAG;IAClB,OAAO,KAAKF,MAAL,CAAYG,OAAZ,CAAoB7B,SAApB,KAAkC,CAAlC,IAAuC,CAAC,CAAC,KAAKY,QAArD;EACH;;AAlDuB"},"metadata":{},"sourceType":"module"}