{"ast":null,"code":"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport { Log } from './Log.js';\nimport random from './random.js';\nexport class State {\n  constructor() {\n    let {\n      id,\n      data,\n      created,\n      request_type\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._id = id || random();\n    this._data = data;\n\n    if (typeof created === 'number' && created > 0) {\n      this._created = created;\n    } else {\n      this._created = parseInt(Date.now() / 1000);\n    }\n\n    this._request_type = request_type;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get created() {\n    return this._created;\n  }\n\n  get request_type() {\n    return this._request_type;\n  }\n\n  toStorageString() {\n    Log.debug(\"State.toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type\n    });\n  }\n\n  static fromStorageString(storageString) {\n    Log.debug(\"State.fromStorageString\");\n    return new State(JSON.parse(storageString));\n  }\n\n  static clearStaleState(storage, age) {\n    var cutoff = Date.now() / 1000 - age;\n    return storage.getAllKeys().then(keys => {\n      Log.debug(\"State.clearStaleState: got keys\", keys);\n      var promises = [];\n\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        var p = storage.get(key).then(item => {\n          let remove = false;\n\n          if (item) {\n            try {\n              var state = State.fromStorageString(item);\n              Log.debug(\"State.clearStaleState: got item from key: \", key, state.created);\n\n              if (state.created <= cutoff) {\n                remove = true;\n              }\n            } catch (e) {\n              Log.error(\"State.clearStaleState: Error parsing state for key\", key, e.message);\n              remove = true;\n            }\n          } else {\n            Log.debug(\"State.clearStaleState: no item in storage for key: \", key);\n            remove = true;\n          }\n\n          if (remove) {\n            Log.debug(\"State.clearStaleState: removed item for key: \", key);\n            return storage.remove(key);\n          }\n        });\n        promises.push(p);\n      }\n\n      Log.debug(\"State.clearStaleState: waiting on promise count:\", promises.length);\n      return Promise.all(promises);\n    });\n  }\n\n}","map":{"version":3,"names":["Log","random","State","constructor","id","data","created","request_type","_id","_data","_created","parseInt","Date","now","_request_type","toStorageString","debug","JSON","stringify","fromStorageString","storageString","parse","clearStaleState","storage","age","cutoff","getAllKeys","then","keys","promises","i","length","key","p","get","item","remove","state","e","error","message","push","Promise","all"],"sources":["C:/Users/theoj/Desktop/WebbProject-Yr3-React18/ClientApp/node_modules/oidc-client/src/State.js"],"sourcesContent":["// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\r\n\r\nimport { Log } from './Log.js';\r\nimport random from './random.js';\r\n\r\nexport class State {\r\n    constructor({id, data, created, request_type} = {}) {\r\n        this._id = id || random();\r\n        this._data = data;\r\n\r\n        if (typeof created === 'number' && created > 0) {\r\n            this._created = created;\r\n        }\r\n        else {\r\n            this._created = parseInt(Date.now() / 1000);\r\n        }\r\n        this._request_type =  request_type;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    get created() {\r\n        return this._created;\r\n    }\r\n    get request_type() {\r\n        return this._request_type;\r\n    }\r\n\r\n    toStorageString() {\r\n        Log.debug(\"State.toStorageString\");\r\n        return JSON.stringify({\r\n            id: this.id,\r\n            data: this.data,\r\n            created: this.created,\r\n            request_type: this.request_type\r\n        });\r\n    }\r\n\r\n    static fromStorageString(storageString) {\r\n        Log.debug(\"State.fromStorageString\");\r\n        return new State(JSON.parse(storageString));\r\n    }\r\n\r\n    static clearStaleState(storage, age) {\r\n\r\n        var cutoff = Date.now() / 1000 - age;\r\n\r\n        return storage.getAllKeys().then(keys => {\r\n            Log.debug(\"State.clearStaleState: got keys\", keys);\r\n\r\n            var promises = [];\r\n            for (let i = 0; i < keys.length; i++) {\r\n                let key = keys[i];\r\n                var p = storage.get(key).then(item => {\r\n                    let remove = false;\r\n\r\n                    if (item) {\r\n                        try {\r\n                            var state = State.fromStorageString(item)\r\n\r\n                            Log.debug(\"State.clearStaleState: got item from key: \", key, state.created);\r\n\r\n                            if (state.created <= cutoff) {\r\n                                remove = true;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            Log.error(\"State.clearStaleState: Error parsing state for key\", key, e.message);\r\n                            remove = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        Log.debug(\"State.clearStaleState: no item in storage for key: \", key);\r\n                        remove = true;\r\n                    }\r\n\r\n                    if (remove) {\r\n                        Log.debug(\"State.clearStaleState: removed item for key: \", key);\r\n                        return storage.remove(key);\r\n                    }\r\n                });\r\n\r\n                promises.push(p);\r\n            }\r\n\r\n            Log.debug(\"State.clearStaleState: waiting on promise count:\", promises.length);\r\n            return Promise.all(promises);\r\n        });\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,MAAMC,KAAN,CAAY;EACfC,WAAW,GAAyC;IAAA,IAAxC;MAACC,EAAD;MAAKC,IAAL;MAAWC,OAAX;MAAoBC;IAApB,CAAwC,uEAAJ,EAAI;IAChD,KAAKC,GAAL,GAAWJ,EAAE,IAAIH,MAAM,EAAvB;IACA,KAAKQ,KAAL,GAAaJ,IAAb;;IAEA,IAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,GAAG,CAA7C,EAAgD;MAC5C,KAAKI,QAAL,GAAgBJ,OAAhB;IACH,CAFD,MAGK;MACD,KAAKI,QAAL,GAAgBC,QAAQ,CAACC,IAAI,CAACC,GAAL,KAAa,IAAd,CAAxB;IACH;;IACD,KAAKC,aAAL,GAAsBP,YAAtB;EACH;;EAEK,IAAFH,EAAE,GAAG;IACL,OAAO,KAAKI,GAAZ;EACH;;EACO,IAAJH,IAAI,GAAG;IACP,OAAO,KAAKI,KAAZ;EACH;;EACU,IAAPH,OAAO,GAAG;IACV,OAAO,KAAKI,QAAZ;EACH;;EACe,IAAZH,YAAY,GAAG;IACf,OAAO,KAAKO,aAAZ;EACH;;EAEDC,eAAe,GAAG;IACdf,GAAG,CAACgB,KAAJ,CAAU,uBAAV;IACA,OAAOC,IAAI,CAACC,SAAL,CAAe;MAClBd,EAAE,EAAE,KAAKA,EADS;MAElBC,IAAI,EAAE,KAAKA,IAFO;MAGlBC,OAAO,EAAE,KAAKA,OAHI;MAIlBC,YAAY,EAAE,KAAKA;IAJD,CAAf,CAAP;EAMH;;EAEuB,OAAjBY,iBAAiB,CAACC,aAAD,EAAgB;IACpCpB,GAAG,CAACgB,KAAJ,CAAU,yBAAV;IACA,OAAO,IAAId,KAAJ,CAAUe,IAAI,CAACI,KAAL,CAAWD,aAAX,CAAV,CAAP;EACH;;EAEqB,OAAfE,eAAe,CAACC,OAAD,EAAUC,GAAV,EAAe;IAEjC,IAAIC,MAAM,GAAGb,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoBW,GAAjC;IAEA,OAAOD,OAAO,CAACG,UAAR,GAAqBC,IAArB,CAA0BC,IAAI,IAAI;MACrC5B,GAAG,CAACgB,KAAJ,CAAU,iCAAV,EAA6CY,IAA7C;MAEA,IAAIC,QAAQ,GAAG,EAAf;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;QAClC,IAAIE,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAd;QACA,IAAIG,CAAC,GAAGV,OAAO,CAACW,GAAR,CAAYF,GAAZ,EAAiBL,IAAjB,CAAsBQ,IAAI,IAAI;UAClC,IAAIC,MAAM,GAAG,KAAb;;UAEA,IAAID,IAAJ,EAAU;YACN,IAAI;cACA,IAAIE,KAAK,GAAGnC,KAAK,CAACiB,iBAAN,CAAwBgB,IAAxB,CAAZ;cAEAnC,GAAG,CAACgB,KAAJ,CAAU,4CAAV,EAAwDgB,GAAxD,EAA6DK,KAAK,CAAC/B,OAAnE;;cAEA,IAAI+B,KAAK,CAAC/B,OAAN,IAAiBmB,MAArB,EAA6B;gBACzBW,MAAM,GAAG,IAAT;cACH;YACJ,CARD,CASA,OAAOE,CAAP,EAAU;cACNtC,GAAG,CAACuC,KAAJ,CAAU,oDAAV,EAAgEP,GAAhE,EAAqEM,CAAC,CAACE,OAAvE;cACAJ,MAAM,GAAG,IAAT;YACH;UACJ,CAdD,MAeK;YACDpC,GAAG,CAACgB,KAAJ,CAAU,qDAAV,EAAiEgB,GAAjE;YACAI,MAAM,GAAG,IAAT;UACH;;UAED,IAAIA,MAAJ,EAAY;YACRpC,GAAG,CAACgB,KAAJ,CAAU,+CAAV,EAA2DgB,GAA3D;YACA,OAAOT,OAAO,CAACa,MAAR,CAAeJ,GAAf,CAAP;UACH;QACJ,CA3BO,CAAR;QA6BAH,QAAQ,CAACY,IAAT,CAAcR,CAAd;MACH;;MAEDjC,GAAG,CAACgB,KAAJ,CAAU,kDAAV,EAA8Da,QAAQ,CAACE,MAAvE;MACA,OAAOW,OAAO,CAACC,GAAR,CAAYd,QAAZ,CAAP;IACH,CAxCM,CAAP;EAyCH;;AAvFc"},"metadata":{},"sourceType":"module"}