{"ast":null,"code":"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport { Log } from './Log.js';\nexport class User {\n  constructor(_ref) {\n    let {\n      id_token,\n      session_state,\n      access_token,\n      refresh_token,\n      token_type,\n      scope,\n      profile,\n      expires_at,\n      state\n    } = _ref;\n    this.id_token = id_token;\n    this.session_state = session_state;\n    this.access_token = access_token;\n    this.refresh_token = refresh_token;\n    this.token_type = token_type;\n    this.scope = scope;\n    this.profile = profile;\n    this.expires_at = expires_at;\n    this.state = state;\n  }\n\n  get expires_in() {\n    if (this.expires_at) {\n      let now = parseInt(Date.now() / 1000);\n      return this.expires_at - now;\n    }\n\n    return undefined;\n  }\n\n  set expires_in(value) {\n    let expires_in = parseInt(value);\n\n    if (typeof expires_in === 'number' && expires_in > 0) {\n      let now = parseInt(Date.now() / 1000);\n      this.expires_at = now + expires_in;\n    }\n  }\n\n  get expired() {\n    let expires_in = this.expires_in;\n\n    if (expires_in !== undefined) {\n      return expires_in <= 0;\n    }\n\n    return undefined;\n  }\n\n  get scopes() {\n    return (this.scope || \"\").split(\" \");\n  }\n\n  toStorageString() {\n    Log.debug(\"User.toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n\n  static fromStorageString(storageString) {\n    Log.debug(\"User.fromStorageString\");\n    return new User(JSON.parse(storageString));\n  }\n\n}","map":{"version":3,"names":["Log","User","constructor","id_token","session_state","access_token","refresh_token","token_type","scope","profile","expires_at","state","expires_in","now","parseInt","Date","undefined","value","expired","scopes","split","toStorageString","debug","JSON","stringify","fromStorageString","storageString","parse"],"sources":["C:/Users/theoj/Desktop/WebbProject-Yr3-React18/ClientApp/node_modules/oidc-client/src/User.js"],"sourcesContent":["// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\r\n\r\nimport { Log } from './Log.js';\r\n\r\nexport class User {\r\n    constructor({id_token, session_state, access_token, refresh_token, token_type, scope, profile, expires_at, state}) {\r\n        this.id_token = id_token;\r\n        this.session_state = session_state;\r\n        this.access_token = access_token;\r\n        this.refresh_token = refresh_token;\r\n        this.token_type = token_type;\r\n        this.scope = scope;\r\n        this.profile = profile;\r\n        this.expires_at = expires_at;\r\n        this.state = state;\r\n    }\r\n\r\n    get expires_in() {\r\n        if (this.expires_at) {\r\n            let now = parseInt(Date.now() / 1000);\r\n            return this.expires_at - now;\r\n        }\r\n        return undefined;\r\n    }\r\n    set expires_in(value) {\r\n        let expires_in = parseInt(value);\r\n        if (typeof expires_in === 'number' && expires_in > 0) {\r\n            let now = parseInt(Date.now() / 1000);\r\n            this.expires_at = now + expires_in;\r\n        }\r\n    }\r\n\r\n    get expired() {\r\n        let expires_in = this.expires_in;\r\n        if (expires_in !== undefined) {\r\n            return expires_in <= 0;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get scopes() {\r\n        return (this.scope || \"\").split(\" \");\r\n    }\r\n\r\n    toStorageString() {\r\n        Log.debug(\"User.toStorageString\");\r\n        return JSON.stringify({\r\n            id_token: this.id_token,\r\n            session_state: this.session_state,\r\n            access_token: this.access_token,\r\n            refresh_token: this.refresh_token,\r\n            token_type: this.token_type,\r\n            scope: this.scope,\r\n            profile: this.profile,\r\n            expires_at: this.expires_at\r\n        });\r\n    }\r\n\r\n    static fromStorageString(storageString) {\r\n        Log.debug(\"User.fromStorageString\");\r\n        return new User(JSON.parse(storageString));\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,GAAT,QAAoB,UAApB;AAEA,OAAO,MAAMC,IAAN,CAAW;EACdC,WAAW,OAAwG;IAAA,IAAvG;MAACC,QAAD;MAAWC,aAAX;MAA0BC,YAA1B;MAAwCC,aAAxC;MAAuDC,UAAvD;MAAmEC,KAAnE;MAA0EC,OAA1E;MAAmFC,UAAnF;MAA+FC;IAA/F,CAAuG;IAC/G,KAAKR,QAAL,GAAgBA,QAAhB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;EAEa,IAAVC,UAAU,GAAG;IACb,IAAI,KAAKF,UAAT,EAAqB;MACjB,IAAIG,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACF,GAAL,KAAa,IAAd,CAAlB;MACA,OAAO,KAAKH,UAAL,GAAkBG,GAAzB;IACH;;IACD,OAAOG,SAAP;EACH;;EACa,IAAVJ,UAAU,CAACK,KAAD,EAAQ;IAClB,IAAIL,UAAU,GAAGE,QAAQ,CAACG,KAAD,CAAzB;;IACA,IAAI,OAAOL,UAAP,KAAsB,QAAtB,IAAkCA,UAAU,GAAG,CAAnD,EAAsD;MAClD,IAAIC,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACF,GAAL,KAAa,IAAd,CAAlB;MACA,KAAKH,UAAL,GAAkBG,GAAG,GAAGD,UAAxB;IACH;EACJ;;EAEU,IAAPM,OAAO,GAAG;IACV,IAAIN,UAAU,GAAG,KAAKA,UAAtB;;IACA,IAAIA,UAAU,KAAKI,SAAnB,EAA8B;MAC1B,OAAOJ,UAAU,IAAI,CAArB;IACH;;IACD,OAAOI,SAAP;EACH;;EAES,IAANG,MAAM,GAAG;IACT,OAAO,CAAC,KAAKX,KAAL,IAAc,EAAf,EAAmBY,KAAnB,CAAyB,GAAzB,CAAP;EACH;;EAEDC,eAAe,GAAG;IACdrB,GAAG,CAACsB,KAAJ,CAAU,sBAAV;IACA,OAAOC,IAAI,CAACC,SAAL,CAAe;MAClBrB,QAAQ,EAAE,KAAKA,QADG;MAElBC,aAAa,EAAE,KAAKA,aAFF;MAGlBC,YAAY,EAAE,KAAKA,YAHD;MAIlBC,aAAa,EAAE,KAAKA,aAJF;MAKlBC,UAAU,EAAE,KAAKA,UALC;MAMlBC,KAAK,EAAE,KAAKA,KANM;MAOlBC,OAAO,EAAE,KAAKA,OAPI;MAQlBC,UAAU,EAAE,KAAKA;IARC,CAAf,CAAP;EAUH;;EAEuB,OAAjBe,iBAAiB,CAACC,aAAD,EAAgB;IACpC1B,GAAG,CAACsB,KAAJ,CAAU,wBAAV;IACA,OAAO,IAAIrB,IAAJ,CAASsB,IAAI,CAACI,KAAL,CAAWD,aAAX,CAAT,CAAP;EACH;;AAzDa"},"metadata":{},"sourceType":"module"}